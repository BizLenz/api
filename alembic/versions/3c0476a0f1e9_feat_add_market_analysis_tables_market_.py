"""feat: add market analysis tables (market_analysis, competitor_analysis, product_analysis)

Revision ID: 3c0476a0f1e9
Revises: 95981c1d29cf
Create Date: 2025-08-11 17:04:56.943190

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3c0476a0f1e9'
down_revision: str | Sequence[str] | None = '95981c1d29cf'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. market_analysis 테이블 생성
    op.create_table('market_analysis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='분석 데이터 고유 ID'),
    sa.Column('market_name', sa.String(length=255), nullable=False, comment='분석 대상 시장의 이름'),
    sa.Column('year', sa.Integer(), nullable=False, comment='데이터의 기준 연도'),
    sa.Column('total_revenue', sa.Numeric(precision=20, scale=2), nullable=True, comment='(A) 해당 연도 전체 시장 매출액'),
    sa.Column('cagr', sa.Numeric(precision=5, scale=2), nullable=True, comment='(A) 연평균 성장률 (%)'),
    sa.Column('growth_drivers', sa.Text(), nullable=True, comment='(A) 시장 성장 동인 (기술 트렌드, 규제 변화 등)'),
    sa.Column('customer_group', sa.String(length=100), nullable=True, comment='(C) 주요 고객군 (연령, 산업, 지역 등)'),
    sa.Column('avg_purchase_value', sa.Numeric(precision=15, scale=2), nullable=True, comment='(C) 평균 구매 금액'),
    sa.Column('nps', sa.Numeric(precision=5, scale=2), nullable=True, comment='(C) 순추천지수 (Net Promoter Score)'),
    sa.Column('retention_rate', sa.Numeric(precision=5, scale=2), nullable=True, comment='(C) 고객 유지율 (%)'),
    sa.Column('source', sa.String(length=255), nullable=True, comment='데이터의 출처 (보고서, 기사 등)'),
    sa.Column('last_updated', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True, comment='이 행(row)이 마지막으로 업데이트된 시간'),
    sa.PrimaryKeyConstraint('id')
    )
    
    # market_analysis 테이블 인덱스 생성
    op.create_index('idx_market_analysis_market_year', 'market_analysis', ['market_name', 'year'], unique=False)
    op.create_index('idx_market_analysis_revenue_desc', 'market_analysis', [sa.text('total_revenue DESC')], unique=False)
    op.create_index('idx_market_analysis_year_desc', 'market_analysis', [sa.text('year DESC')], unique=False)
    op.create_index(op.f('ix_market_analysis_id'), 'market_analysis', ['id'], unique=False)

    # 2. competitor_analysis 테이블 생성
    op.create_table('competitor_analysis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='분석 데이터 고유 ID'),
    sa.Column('market_name', sa.String(length=255), nullable=False, comment='분석 대상 시장의 이름'),
    sa.Column('year', sa.Integer(), nullable=False, comment='데이터의 기준 연도'),
    sa.Column('competitor_name', sa.String(length=255), nullable=False, comment='경쟁사 이름'),
    sa.Column('revenue', sa.Numeric(precision=20, scale=2), nullable=True, comment='(B-1) 해당 경쟁사의 연간 매출액'),
    sa.Column('operating_profit', sa.Numeric(precision=20, scale=2), nullable=True, comment='(B-1) 해당 경쟁사의 연간 영업이익'),
    sa.Column('debt_ratio', sa.Numeric(precision=10, scale=2), nullable=True, comment='(B-1) 해당 경쟁사의 부채 비율 (%)'),
    sa.Column('share_percentage', sa.Numeric(precision=5, scale=2), nullable=True, comment='(B-2) 해당 시장에서의 점유율 (%)'),
    sa.Column('competitive_advantage', sa.Text(), nullable=True, comment='(B-4) 경쟁 우위 요소 (특허, 브랜드, 유통망 등)'),
    sa.Column('source', sa.String(length=255), nullable=True, comment='데이터의 출처'),
    sa.Column('last_updated', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True, comment='이 행(row)이 마지막으로 업데이트된 시간'),
    sa.PrimaryKeyConstraint('id')
    )
    
    # competitor_analysis 테이블 인덱스 생성
    op.create_index('idx_competitor_analysis_competitor', 'competitor_analysis', ['competitor_name'], unique=False)
    op.create_index('idx_competitor_analysis_market_year', 'competitor_analysis', ['market_name', 'year'], unique=False)
    op.create_index('idx_competitor_analysis_revenue_desc', 'competitor_analysis', [sa.text('revenue DESC')], unique=False)
    op.create_index('idx_competitor_analysis_share_desc', 'competitor_analysis', [sa.text('share_percentage DESC')], unique=False)
    op.create_index(op.f('ix_competitor_analysis_id'), 'competitor_analysis', ['id'], unique=False)

    # 3. product_analysis 테이블 생성
    op.create_table('product_analysis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='분석 데이터 고유 ID'),
    sa.Column('competitor_name', sa.String(length=255), nullable=False, comment='이 제품을 소유한 경쟁사 이름'),
    sa.Column('product_name', sa.String(length=255), nullable=False, comment='제품 또는 서비스의 이름'),
    sa.Column('category', sa.String(length=100), nullable=True, comment='제품 카테고리'),
    sa.Column('price', sa.Numeric(precision=15, scale=2), nullable=True, comment='(D) 대표 가격 정보'),
    sa.Column('price_policy_notes', sa.Text(), nullable=True, comment='(D) 가격 정책에 대한 상세 설명'),
    sa.Column('distribution_channels', sa.Text(), nullable=True, comment='(D) 주요 유통 채널 목록 (콤마로 구분된 텍스트 등)'),
    sa.Column('tech_level', sa.String(length=100), nullable=True, comment='(B-3) 제품의 기술적 수준'),
    sa.Column('features', sa.Text(), nullable=True, comment='(B-3) 제품의 주요 특징 요약'),
    sa.Column('last_updated', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True, comment='이 행(row)이 마지막으로 업데이트된 시간'),
    sa.PrimaryKeyConstraint('id')
    )
    
    # product_analysis 테이블 인덱스 생성
    op.create_index('idx_product_analysis_category', 'product_analysis', ['category'], unique=False)
    op.create_index('idx_product_analysis_competitor', 'product_analysis', ['competitor_name'], unique=False)
    op.create_index('idx_product_analysis_price_desc', 'product_analysis', [sa.text('price DESC')], unique=False)
    op.create_index('idx_product_analysis_product', 'product_analysis', ['product_name'], unique=False)
    op.create_index(op.f('ix_product_analysis_id'), 'product_analysis', ['id'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # product_analysis 테이블 및 인덱스 삭제
    op.drop_index(op.f('ix_product_analysis_id'), table_name='product_analysis')
    op.drop_index('idx_product_analysis_product', table_name='product_analysis')
    op.drop_index('idx_product_analysis_price_desc', table_name='product_analysis')
    op.drop_index('idx_product_analysis_competitor', table_name='product_analysis')
    op.drop_index('idx_product_analysis_category', table_name='product_analysis')
    op.drop_table('product_analysis')
    
    # competitor_analysis 테이블 및 인덱스 삭제
    op.drop_index(op.f('ix_competitor_analysis_id'), table_name='competitor_analysis')
    op.drop_index('idx_competitor_analysis_share_desc', table_name='competitor_analysis')
    op.drop_index('idx_competitor_analysis_revenue_desc', table_name='competitor_analysis')
    op.drop_index('idx_competitor_analysis_market_year', table_name='competitor_analysis')
    op.drop_index('idx_competitor_analysis_competitor', table_name='competitor_analysis')
    op.drop_table('competitor_analysis')
    
    # market_analysis 테이블 및 인덱스 삭제
    op.drop_index(op.f('ix_market_analysis_id'), table_name='market_analysis')
    op.drop_index('idx_market_analysis_year_desc', table_name='market_analysis')
    op.drop_index('idx_market_analysis_revenue_desc', table_name='market_analysis')
    op.drop_index('idx_market_analysis_market_year', table_name='market_analysis')
    op.drop_table('market_analysis')
    
    # ### end Alembic commands ###