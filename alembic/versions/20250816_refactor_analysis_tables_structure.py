"""refactor_analysis_tables_structure

Revision ID: f842eea9d17e
Revises: a4763af9a95f
Create Date: 2025-08-16 02:12:42.385311

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f842eea9d17e'
down_revision: str | Sequence[str] | None = 'a4763af9a95f'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_analysis_jobs_plan_latest'), table_name='analysis_jobs')
    op.drop_column('analysis_jobs', 'is_latest')
    op.alter_column('analysis_results', 'details',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment='분석 유형별 특화 데이터 저장소 (모든 상세 평가 데이터 통합)',
               existing_comment='분석 유형별 특화 데이터 저장소',
               existing_nullable=True)
    op.drop_index(op.f('idx_analysis_results_bmc_gin'), table_name='analysis_results', postgresql_using='gin')
    op.drop_index(op.f('idx_analysis_results_confidence'), table_name='analysis_results')
    op.drop_index(op.f('idx_analysis_results_feedback_gin'), table_name='analysis_results', postgresql_using='gin')
    op.drop_index(op.f('idx_analysis_results_importance_score'), table_name='analysis_results')
    op.drop_index(op.f('idx_analysis_results_sources_gin'), table_name='analysis_results', postgresql_using='gin')
    op.drop_index(op.f('idx_analysis_results_version'), table_name='analysis_results')
    op.create_index('idx_analysis_results_details_gin', 'analysis_results', ['details'], unique=False, postgresql_using='gin')
    op.drop_column('analysis_results', 'importance_level')
    op.drop_column('analysis_results', 'bmc_data')
    op.drop_column('analysis_results', 'confidence_score')
    op.drop_column('analysis_results', 'visualization_path')
    op.drop_column('analysis_results', 'benchmark_data')
    op.drop_column('analysis_results', 'weight')
    op.drop_column('analysis_results', 'sources')
    op.drop_column('analysis_results', 'feedback_points')
    op.drop_column('analysis_results', 'evaluation_criteria')
    op.drop_column('analysis_results', 'metrics')
    op.drop_column('analysis_results', 'version')
    op.create_foreign_key(None, 'business_plans', 'analysis_jobs', ['latest_job_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'business_plans', type_='foreignkey')
    op.add_column('analysis_results', sa.Column('version', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True, comment='평가 버전'))
    op.add_column('analysis_results', sa.Column('metrics', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='평가 지표 및 세부 점수'))
    op.add_column('analysis_results', sa.Column('evaluation_criteria', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='평가 기준 정보'))
    op.add_column('analysis_results', sa.Column('feedback_points', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='GET /analysis/feedback - 개선점 목록'))
    op.add_column('analysis_results', sa.Column('sources', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='GET /analysis/sources - 자료 출처 목록'))
    op.add_column('analysis_results', sa.Column('weight', sa.NUMERIC(precision=5, scale=4), server_default=sa.text('1.0000'), autoincrement=False, nullable=True, comment='평가 가중치 (0.0000-1.0000)'))
    op.add_column('analysis_results', sa.Column('benchmark_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='벤치마크 데이터'))
    op.add_column('analysis_results', sa.Column('visualization_path', sa.VARCHAR(length=500), autoincrement=False, nullable=True, comment='GET /analysis/visualization - 시각화 자료 경로'))
    op.add_column('analysis_results', sa.Column('confidence_score', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True, comment='평가 신뢰도 (0.00-100.00)'))
    op.add_column('analysis_results', sa.Column('bmc_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='GET /analysis/bmc - 비즈니스 모델 캔버스 데이터'))
    op.add_column('analysis_results', sa.Column('importance_level', sa.VARCHAR(length=20), server_default=sa.text("'medium'::character varying"), autoincrement=False, nullable=True, comment='중요도 (critical, high, medium, low)'))
    op.drop_index('idx_analysis_results_details_gin', table_name='analysis_results', postgresql_using='gin')
    op.create_index(op.f('idx_analysis_results_version'), 'analysis_results', ['version'], unique=False)
    op.create_index(op.f('idx_analysis_results_sources_gin'), 'analysis_results', ['sources'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_analysis_results_importance_score'), 'analysis_results', ['importance_level', sa.literal_column('score DESC')], unique=False)
    op.create_index(op.f('idx_analysis_results_feedback_gin'), 'analysis_results', ['feedback_points'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_analysis_results_confidence'), 'analysis_results', [sa.literal_column('confidence_score DESC')], unique=False)
    op.create_index(op.f('idx_analysis_results_bmc_gin'), 'analysis_results', ['bmc_data'], unique=False, postgresql_using='gin')
    op.alter_column('analysis_results', 'details',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment='분석 유형별 특화 데이터 저장소',
               existing_comment='분석 유형별 특화 데이터 저장소 (모든 상세 평가 데이터 통합)',
               existing_nullable=True)
    op.add_column('analysis_jobs', sa.Column('is_latest', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True, comment='해당 파일의 최신 분석 여부'))
    op.create_index(op.f('idx_analysis_jobs_plan_latest'), 'analysis_jobs', ['plan_id', 'is_latest'], unique=False)
    # ### end Alembic commands ###