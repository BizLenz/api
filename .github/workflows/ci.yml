name: CI

on:
  push:
    branches: [ "main", "feature/**" ]      # ✅ 수정됨: feature → main, feature/** 로 확장
  pull_request:
    branches: [ "main", "feature/**" ]      # ✅ 수정됨: PR 대상도 main 포함
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install Python 3.11 with uv
        run: uv python install 3.11

      - name: Create virtual environment
        run: uv venv

      - name: Install dependencies
        run: uv pip install -r requirements.txt


      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" | tr '\n' '\n' > .env

      - name: Install uv audit
        run: uv pip install uv-audit

      - name: Create .env file
        run: |
          echo "S3_BUCKET=${{ secrets.S3_BUCKET }}" > .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env

      - name: Ruff Lint
        continue-on-error: true
        uses: astral-sh/ruff-action@v3
        with:
          args: check --output-format=github .
                                    # 5. Ruff로 코드 린트 검사

      - name: Ruff Format automatically
        continue-on-error: true
        uses: astral-sh/ruff-action@v3
        with:
          args: format .

      - name: Ruff Format Check
        continue-on-error: true
        uses: astral-sh/ruff-action@v3
        with:
          args: format --check .    # 6. Ruff로 코드 포맷 검사


      - name: Run uv audit
        run: uv run uv-audit


      - name: Run pytest
        run: uv run pytest          # 8. Pytest로 자동화 테스트 실행



      - name: Build Docker image
        run: docker build -t my-app:${{ github.sha }} .
