name: CI

on:
  push:
    branches: [ "feature" ]         # feature 브랜치에 push될 때 실행
  pull_request:
    branches: [ "feature" ]         # feature 브랜치로 PR 생성/업데이트 시 실행
  workflow_dispatch:                # 수동 실행 지원

jobs:
  build:
    runs-on: ubuntu-latest          # Ubuntu 최신 버전에서 실행
    steps:
      - uses: actions/checkout@v4   # 1. 저장소 코드 체크아웃

      - name: Install uv
        uses: astral-sh/setup-uv@v5 # 2. uv(패키지 매니저) 설치

      - name: Install Python 3.11 with uv
        run: uv python install 3.11 # 3. uv로 Python 3.11 설치

      - name: Sync dependencies
        run: uv sync                # 4. pyproject.toml 기반 의존성 설치

      - name: Ruff Lint
        uses: astral-sh/ruff-action@v3
        with:
          args: check --output-format=github .
                                    # 5. Ruff로 코드 린트 검사

      - name: Ruff Format Check
        uses: astral-sh/ruff-action@v3
        with:
          args: format --check .    # 6. Ruff로 코드 포맷 검사

      - name: Run uv audit
        run: uv audit               # 7. 패키지 취약점 점검

      - name: Run Pytest
        run: uv run pytest          # 8. Pytest로 자동화 테스트 실행

      - name: Build Docker image
        run: docker build -t my-app:${{ github.sha }} .
                                    # 9. Docker 이미지 빌드 (커밋 SHA 태그)
