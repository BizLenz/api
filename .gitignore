# Created by https://www.toptal.com/developers/gitignore/api/python,visualstudiocode
# Edit at https://www.toptal.com/developers/gitignore?templates=python,visualstudiocode

### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.pyc
*.dist-info/


# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

### Python Patch ###
# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration
poetry.toml

# ruff
.ruff_cache/

# LSP config files
pyrightconfig.json

### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

# End of https://www.toptal.com/developers/gitignore/api/python,visualstudiocode.env
.env.*
*.pem
.env
src/.env
.env.*
*.pem
.env
.env.*
*.pem

# 설치된 라이브러리 폴더 (src 폴더 내)
src/annotated_types/
src/anyio/
src/apiclient/
src/bin/
src/boto3/
src/botocore/
src/cachetools/
src/certifi/
src/charset_normalizer/
src/click/
src/colorama/
src/dnspython/
src/email_validator/
src/fastapi/
src/fastapi_cli/
src/google_ai_generativelanguage/
src/google_api_core/
src/google_api_python_client/
src/google_auth/
src/google_auth_httplib2/
src/google_generativeai/
src/grpcio/
src/grpcio_status/
src/h11/
src/httpcore/
src/httplib2/
src/httptools/
src/httpx/
src/idna/
src/iniconfig/
src/jmespath/
src/jinja2/
src/mangum/
src/markdown_it_py/
src/markupsafe/
src/mdurl/
src/orjson/
src/packaging/
src/pluggy/
src/proto_plus/
src/protobuf/
src/pyasn1/
src/pyasn1_modules/
src/pydantic/
src/pydantic_core/
src/pygments/
src/pyparsing/
src/pytest/
src/pytest_asyncio/
src/python_dateutil/
src/python_dotenv/
src/python_multipart/
src/pyyaml/
src/requests/
src/rich/
src/rich_toolkit/
src/rsa/
src/s3transfer/
src/shellingham/
src/six/
src/sniffio/
src/starlette/
src/tqdm/
src/typer/
src/typing_extensions/
src/typing_inspection/
src/ujson/
src/uritemplate/
src/urllib3/
src/uvicorn/
src/watchfiles/
src/websockets/
src/_pytest
src/_yaml
src/dateutil 
src/dns 
src/dotenv 
src/google 
src/googleapiclient 
src/grpc 
src/grpc_status 
src/markdown_it 
src/multipart 
src/proto 
src/yaml 
src/google_auth_httplib2.py 
src/google_generativeai-0.7.2-py3.11-nspkg.pth
src/py.py 
src/six.py 
src/typing_extensions.py 
